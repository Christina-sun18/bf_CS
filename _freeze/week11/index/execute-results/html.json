{
  "hash": "bd2c2400897863124a05d246fe0e5d33",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 11: Dynamic regression\"\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n## What you will learn this week\n\n* How to combine regression models with ARIMA models to form dynamic regression models\n* Dynamic harmonic regression to handle complex seasonality\n* Lagged predictors\n\n## Exercises (on your own or in tutorial)\n\nComplete Exercises 1-7 from [Section 7.10 of the book](https://otexts.com/fpp3/regression-exercises.html).\n\n## Exercise solutions\n\n<!-- ::: {.callout appearance=\"minimal\"} -->\n<!-- <i class=\"bi bi-download\"></i> [Week 11 Tutorial Solution.html](Week11.html){download=\"Week 11 Tutorial Solution.html\"} -->\n<!-- ::: -->\n\n## Pre-class seminar\n\nRead [Chapter 10 of the textbook](https://otexts.com/fpp3/dynamic.html) and watch all embedded videos\n\n\n\n\n\n## Slides for seminar\n\n<embed src='/week11/week11.pdf' type='application/pdf' width='100%' height=465></embed>\n<a href=/week11/week11.pdf class='badge badge-small badge-red'>Download pdf</a>\n\n\n\n\n## Seminar activities\n\n\n\n\n\n1. Review the model for US gasoline data from last week to now be a dynamic harmonic regression model. \n\n\n2. Turn the half hourly electricity data into daily data using the following code. Try and understand what each line does.\n\n    ```r\n    vic_elec_daily <- vic_elec |>   \n      index_by(Date = date(Time)) |> \n      summarise(                        \n        Demand = sum(Demand)/1e3,       \n        Temperature = max(Temperature), \n        Holiday = any(Holiday)          \n      ) |> \n      mutate(Day_Type = case_when(       \n        Holiday ~ \"Holiday\",             \n        wday(Date) %in% 2:6 ~ \"Weekday\", \n        TRUE ~ \"Weekend\"                 \n      )) \n    ```\n    Explore the seasonal patterns.\n    \n    a. Fit an ETS, ARIMA and a dynamic harmonic regression model using the following code:\n    \n    ```r\n    elec_fit <- vic_elec_daily |>\n      model(\n        ets = ETS(Demand),\n        arima = ARIMA(log(Demand)),\n        dhr = ARIMA(log(Demand) ~ Temperature + I(Temperature^2) + \n                      (Day_Type == \"Weekday\") + \n                      fourier(period = \"year\", K = 4))\n      )\n    ```\n    Explore the model fits and residuals. \n    \n    b. Generate forecast for 14-days-ahead using the following code. \n    \n    ```r\n    vic_elec_future <- new_data(vic_elec_daily, 14) |>\n      mutate(\n        Temperature = c(rep(32, 7), rep(25, 7)),\n        Holiday = c(TRUE, rep(FALSE, 13)),\n        Day_Type = case_when(\n          Holiday ~ \"Holiday\",\n          wday(Date) %in% 2:6 ~ \"Weekday\",\n          TRUE ~ \"Weekend\"\n        )\n      )\n    ```\n\n\n\n\n\n\n## Seminar code\n\n::: {.callout appearance=\"minimal\"}\n<i class=\"bi bi-download\"></i> [Seminar_code_week11.R](Seminar_code_week11.R){download=\"Seminar_code_week11.R\"}\n:::\n\n\n\n\n\n\n\n## Assignments\n\n* [IA4](../assignments/A4.qmd) is due on Monday 19 May.\n* [GA4](../assignments/G4.qmd) is due on Monday 26 May.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}